{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_0_to_port_2",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "id": "port_2_to_port_4",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_4_to_port_5",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "id": "port_7_to_port_8",
                    "sourceNode": "7",
                    "sourcePort": "7_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_8_to_port_17",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "17",
                    "targetPort": "17_in"
                },
                {
                    "id": "port_17_to_port_1",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_5_to_port_6",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "id": "port_6_to_port_11",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "11",
                    "targetPort": "11_in"
                },
                {
                    "id": "port_11_to_port_12",
                    "sourceNode": "11",
                    "sourcePort": "11_out",
                    "targetNode": "12",
                    "targetPort": "12_in"
                },
                {
                    "id": "port_12_to_port_13",
                    "sourceNode": "12",
                    "sourcePort": "12_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "id": "port_13_to_port_14",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                },
                {
                    "id": "port_14_to_port_15",
                    "sourceNode": "14",
                    "sourcePort": "14_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                },
                {
                    "id": "port_15_to_port_7",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "7",
                    "targetPort": "7_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_8_to_port_18",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "18",
                    "targetPort": "18_in"
                },
                {
                    "id": "port_18_to_port_1",
                    "sourceNode": "18",
                    "sourcePort": "18_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                }
            ],
            "hash": "cfe9cbd5929678d8a1500d7bfcec88459583fc00",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 190,
                    "y": -1.9184653865522705e-13
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 220,
                    "y": 2020
                },
                "11": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Network sessions as source",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "es-ebc"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 3,
                        "functionName": "network_sessions_as_source",
                        "id": "11",
                        "parameters": {
                            "command": "",
                            "end_time": "now",
                            "query": {
                                "functionId": 3,
                                "parameters": [
                                    "regex_extract_ipv4_1:custom_function_result.data.extracted_ipv4"
                                ],
                                "template": "| tstats `security_content_summariesonly` count values(All_Sessions.vendor_product) values(All_Sessions.user) values(All_Sessions.user_priority) values(All_Sessions.user_category) values(All_Sessions.duration) values(All_Sessions.dest_ip) values(All_Sessions.dest_nt_host) values(All_Sessions.src_ip) values(All_Sessions.src_nt_host) values(All_Sessions.action) values(All_Sessions.app) values(All_Sessions.protocol) values(All_Sessions.signature) from datamodel=Network_Sessions.All_Sessions where (All_Sessions.src_ip=\"{0}\" ) by All_Sessions.src_ip\n\n"
                            },
                            "search_mode": "smart",
                            "start_time": "-1h"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            },
                            {
                                "data_type": "string",
                                "default": "search",
                                "field": "command"
                            },
                            {
                                "data_type": "string",
                                "default": "smart",
                                "field": "search_mode"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "11",
                    "type": "action",
                    "warnings": {},
                    "x": 180,
                    "y": 780
                },
                "12": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Authentication failure count",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "es-ebc"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 4,
                        "functionName": "authentication_failure_count",
                        "id": "12",
                        "parameters": {
                            "command": "",
                            "end_time": "now",
                            "query": {
                                "functionId": 4,
                                "parameters": [
                                    "regex_extract_ipv4_1:custom_function_result.data.extracted_ipv4"
                                ],
                                "template": "| tstats `security_content_summariesonly` count values(Authentication.user) values(Authentication.src_user_id) values(Authentication.user_id) values(Authentication.user_agent) values(Authentication.app) values(Authentication.authentication_method) values(Authentication.authentication_service) values(Authentication.action) values(Authentication.reason) values(Authentication.source) values(Authentication.src) values(Authentication.dest) from datamodel=Authentication where (Authentication.action=\"failure\" AND (Authentication.src=\"{0}\" OR Authentication.dest=\"{0}\")) by Authentication.user, Authentication.dest\n"
                            },
                            "search_mode": "smart",
                            "start_time": "-1h"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            },
                            {
                                "data_type": "string",
                                "default": "search",
                                "field": "command"
                            },
                            {
                                "data_type": "string",
                                "default": "smart",
                                "field": "search_mode"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "12",
                    "type": "action",
                    "warnings": {},
                    "x": 180,
                    "y": 920
                },
                "13": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Authentication success as dest",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "es-ebc"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 5,
                        "functionName": "authentication_success_as_dest",
                        "id": "13",
                        "parameters": {
                            "command": "",
                            "end_time": "now",
                            "query": {
                                "functionId": 5,
                                "parameters": [
                                    "regex_extract_ipv4_1:custom_function_result.data.extracted_ipv4"
                                ],
                                "template": "\n| tstats `security_content_summariesonly` count values(Authentication.user) values(Authentication.src_user_id) values(Authentication.user_id) values(Authentication.user_agent) values(Authentication.app) values(Authentication.authentication_method) values(Authentication.authentication_service) values(Authentication.action) values(Authentication.reason) values(Authentication.source) values(Authentication.src) values(Authentication.dest) from datamodel=Authentication where ((Authentication.action=\"success\" AND Authentication.src=\"{0}\" OR Authentication.dest=\"{0}\")) by Authentication.user, Authentication.dest\n"
                            },
                            "search_mode": "smart",
                            "start_time": "-1h"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            },
                            {
                                "data_type": "string",
                                "default": "search",
                                "field": "command"
                            },
                            {
                                "data_type": "string",
                                "default": "smart",
                                "field": "search_mode"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "13",
                    "type": "action",
                    "warnings": {},
                    "x": 180,
                    "y": 1060
                },
                "14": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Web traffic as source or dest",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "es-ebc"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 6,
                        "functionName": "web_traffic_as_source_or_dest",
                        "id": "14",
                        "parameters": {
                            "command": "",
                            "end_time": "now",
                            "query": {
                                "functionId": 6,
                                "parameters": [
                                    "regex_extract_ipv4_1:custom_function_result.data.extracted_ipv4"
                                ],
                                "template": "| tstats `security_content_summariesonly` count values(Web.src) values(Web.vendor_product) values(Web.user) values(Web.app) values(Web.category) values(Web.url) values(Web.http_user_agent) values(Web.http_referrer) values(Web.uri_path) values(Web.uri_query) from datamodel=Web.Web where (Web.src=\"{0}\" OR Web.dest=\"{0}\") by Web.dest\n\n"
                            },
                            "search_mode": "smart",
                            "start_time": "-1h"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            },
                            {
                                "data_type": "string",
                                "default": "search",
                                "field": "command"
                            },
                            {
                                "data_type": "string",
                                "default": "smart",
                                "field": "search_mode"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "14",
                    "type": "action",
                    "warnings": {},
                    "x": 180,
                    "y": 1220
                },
                "15": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Network traffic as source",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "es-ebc"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 7,
                        "functionName": "network_traffic_as_source",
                        "id": "15",
                        "parameters": {
                            "command": "",
                            "end_time": "now",
                            "query": {
                                "functionId": 7,
                                "parameters": [
                                    "regex_extract_ipv4_1:custom_function_result.data.extracted_ipv4"
                                ],
                                "template": "\n| tstats `security_content_summariesonly` count values(All_Traffic.vendor_product) values(All_Traffic.user) values(All_Traffic.dest_ip) values(All_Traffic.src_ip) values(All_Traffic.dvc_ip) values(All_Traffic.action) values(All_Traffic.app) values(All_Traffic.protocol) from datamodel=Network_Traffic.All_Traffic where (All_Traffic.src_ip=\"{0}\" ) by All_Traffic.rule\n"
                            },
                            "search_mode": "smart",
                            "start_time": "-1h"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            },
                            {
                                "data_type": "string",
                                "default": "search",
                                "field": "command"
                            },
                            {
                                "data_type": "string",
                                "default": "smart",
                                "field": "search_mode"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "15",
                    "type": "action",
                    "warnings": {},
                    "x": 180,
                    "y": 1360
                },
                "17": {
                    "data": {
                        "advanced": {
                            "customName": "task_note_incident_summary",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "task_note_incident_summary",
                        "id": "17",
                        "inputParameters": [
                            "regex_extract_ipv4_1:custom_function_result.data.extracted_ipv4",
                            "network_traffic_as_dest:action_result.summary.total_events",
                            "network_traffic_as_source:action_result.summary.total_events",
                            "network_sessions_as_source:action_result.summary.total_events",
                            "network_session_as_dest:action_result.summary.total_events",
                            "web_traffic_as_source_or_dest:action_result.summary.total_events",
                            "authentication_failure_count:action_result.summary.total_events",
                            "authentication_success_as_dest:action_result.summary.total_events"
                        ],
                        "outputVariables": [
                            "datamodel_note_content"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "17",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    note = (\n        \"\\n**Datamodel events summary**\\n\"\n            \"| Event type | Number of results |\\n\"\n            \"| :--- | :--- |\\n\"\n        )\n    note += \"|{}|{}|\\n\".format(\"Datamodel: Network Traffic events with Threat IP as DESTINATION\", network_traffic_as_dest_summary_total_events)\n    note += \"|{}|{}|\\n\".format(\"Datamodel: Network Traffic events with Threat IP as SOURCE\", network_traffic_as_source_summary_total_events)\n    note += \"|{}|{}|\\n\".format(\"Datamodel: Network Session events with Threat IP as SOURCE\", network_sessions_as_source_summary_total_events)\n    note += \"|{}|{}|\\n\".format(\"Datamodel: Network Session events with Threat IP as DESTINATION\", network_session_as_dest_summary_total_events)\n    note += \"|{}|{}|\\n\".format(\"Datamodel: Web events with Threat IP as SOURCE or DEST\", web_traffic_as_source_or_dest_summary_total_events)\n    note += \"|{}|{}|\\n\".format(\"Datamodel: Authentication FAILED events from Threat IP\", authentication_failure_count_summary_total_events)\n    note += \"|{}|{}|\\n\".format(\"Datamodel: Authentication SUCCESSFUL events from Threat IP\", authentication_success_as_dest_summary_total_events)\n    \n    task_note_incident_summary__datamodel_note_content = note\n    \n",
                    "warnings": {},
                    "x": 400,
                    "y": 1840
                },
                "18": {
                    "data": {
                        "advanced": {
                            "customName": "task_note_incident_summary_no_events",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "task_note_incident_summary_no_events",
                        "id": "18",
                        "inputParameters": [
                            "regex_extract_ipv4_1:custom_function_result.data.extracted_ipv4"
                        ],
                        "outputVariables": [
                            "datamodel_note_content"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "18",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    note = (\n        \"\\n**Datamodel events summary**\\n\"\n            \"| Event type | Number of results |\\n\"\n            \"| :--- | :--- |\\n\"\n        )\n    note += \"|{}|{}|\\n\".format(\"Datamodel: Network Traffic events with Threat IP as DESTINATION\", \"0\")\n    note += \"|{}|{}|\\n\".format(\"Datamodel: Network Traffic events with Threat IP as SOURCE\", \"0\")\n    note += \"|{}|{}|\\n\".format(\"Datamodel: Network Session events with Threat IP as SOURCE\", \"0\")\n    note += \"|{}|{}|\\n\".format(\"Datamodel: Network Session events with Threat IP as DESTINATION\", \"0\")\n    note += \"|{}|{}|\\n\".format(\"Datamodel: Web events with Threat IP as SOURCE or DEST\", \"0\")\n    note += \"|{}|{}|\\n\".format(\"Datamodel: Authentication FAILED events from Threat IP\", \"0\")\n    note += \"|{}|{}|\\n\".format(\"Datamodel: Authentication SUCCESSFUL events from Threat IP\", \"0\")\n    \n    task_note_incident_summary__datamodel_note_content = note\n\n",
                    "warnings": {},
                    "x": -20,
                    "y": 1840
                },
                "2": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "regex_extract_ipv4",
                            "repoName": "community"
                        },
                        "functionId": 1,
                        "functionName": "regex_extract_ipv4_1",
                        "id": "2",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "regex_extract_ipv4": {
                                "description": "Takes a single input and extracts all IPv4 addresses from it using regex.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "An input string that may contain an arbitrary number of ipv4 addresses",
                                        "inputType": "item",
                                        "label": "input_string",
                                        "name": "input_string",
                                        "placeholder": "192.0.2.1",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "regex_extract_ipv4",
                                "name": "regex_extract_ipv4"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "regex_extract_ipv4": {
                                "input_string": "playbook_input:threat_match_value"
                            }
                        }
                    },
                    "errors": {},
                    "id": "2",
                    "type": "utility",
                    "warnings": {},
                    "x": 170,
                    "y": 148
                },
                "4": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "regex_extract_ipv4_1:custom_function_result.data.extracted_ipv4",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "filter_1",
                        "id": "4",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "4",
                    "type": "filter",
                    "warnings": {},
                    "x": 230,
                    "y": 296
                },
                "5": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Network session as dest",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "es-ebc"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "network_session_as_dest",
                        "id": "5",
                        "parameters": {
                            "command": "",
                            "end_time": "now",
                            "query": {
                                "functionId": 1,
                                "parameters": [
                                    "filtered-data:filter_1:condition_1:regex_extract_ipv4_1:custom_function_result.data.extracted_ipv4"
                                ],
                                "template": "%%\n| tstats `security_content_summariesonly` count values(All_Sessions.vendor_product) as vendor_product values(All_Sessions.user) as user  values(All_Sessions.user_priority) as user_priority values(All_Sessions.user_category) as user_category values(All_Sessions.duration) as duration values(All_Sessions.dest_ip) as dest_ip values(All_Sessions.dest_nt_host) as dest_nt_host values(All_Sessions.src_ip) as src_ip values(All_Sessions.src_nt_host) as src_nt_host values(All_Sessions.action) as action values(All_Sessions.app) as app values(All_Sessions.protocol) as protocol values(All_Sessions.signature) as signature from datamodel=Network_Sessions.All_Sessions where (All_Sessions.dest_ip=\"{0}\" ) by All_Sessions.dest_ip\n%%\n"
                            },
                            "search_mode": "smart",
                            "start_time": "-1h"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            },
                            {
                                "data_type": "string",
                                "default": "search",
                                "field": "command"
                            },
                            {
                                "data_type": "string",
                                "default": "smart",
                                "field": "search_mode"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "5",
                    "type": "action",
                    "warnings": {},
                    "x": 170,
                    "y": 476
                },
                "6": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Network traffic as dest",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "es-ebc"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "network_traffic_as_dest",
                        "id": "6",
                        "parameters": {
                            "command": "",
                            "end_time": "now",
                            "query": {
                                "functionId": 2,
                                "parameters": [
                                    "regex_extract_ipv4_1:custom_function_result.data.extracted_ipv4"
                                ],
                                "template": "| tstats `security_content_summariesonly` count values(All_Traffic.vendor_product) as vendor_product values(All_Traffic.user) as user values(All_Traffic.dest_ip) as dest_ip values(All_Traffic.src_ip) as src_ip values(All_Traffic.dvc_ip) as dvc_ip values(All_Traffic.action) as action values(All_Traffic.app) as app values(All_Traffic.protocol) as protocol from datamodel=Network_Traffic.All_Traffic where (All_Traffic.dest_ip=\"{0}\" ) by All_Traffic.rule\n"
                            },
                            "search_mode": "smart",
                            "start_time": "-1h"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            },
                            {
                                "data_type": "string",
                                "default": "search",
                                "field": "command"
                            },
                            {
                                "data_type": "string",
                                "default": "smart",
                                "field": "search_mode"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "action",
                    "warnings": {},
                    "x": 180,
                    "y": 620
                },
                "7": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "noop",
                            "repoName": "community"
                        },
                        "functionId": 3,
                        "functionName": "noop_3",
                        "id": "7",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "noop": {
                                "description": "Do nothing and return nothing. Use this if you want to do something in a custom function setup section or leave a placeholder block in a playbook. This does not sleep or wait and will return as soon as possible.",
                                "fields": [],
                                "label": "noop",
                                "name": "noop"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "noop": {}
                        }
                    },
                    "errors": {},
                    "id": "7",
                    "type": "utility",
                    "warnings": {},
                    "x": 170,
                    "y": 1512
                },
                "8": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "network_session_as_dest:action_result.summary.total_events",
                                        "value": "0"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "network_traffic_as_dest:action_result.summary.total_events",
                                        "value": "0"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "network_sessions_as_source:action_result.summary.total_events",
                                        "value": "0"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "authentication_failure_count:action_result.summary.total_events",
                                        "value": "0"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "authentication_success_as_dest:action_result.summary.total_events",
                                        "value": "0"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "web_traffic_as_source_or_dest:action_result.summary.total_events",
                                        "value": "0"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "network_traffic_as_source:action_result.summary.total_events",
                                        "value": "0"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "or",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "network_session_as_dest:action_result.summary.total_events",
                                        "value": "0"
                                    },
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "network_traffic_as_dest:action_result.summary.total_events",
                                        "value": "0"
                                    },
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "network_sessions_as_source:action_result.summary.total_events",
                                        "value": "0"
                                    },
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "authentication_failure_count:action_result.summary.total_events",
                                        "value": "0"
                                    },
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "authentication_success_as_dest:action_result.summary.total_events",
                                        "value": "0"
                                    },
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "web_traffic_as_source_or_dest:action_result.summary.total_events",
                                        "value": "0"
                                    },
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "network_traffic_as_source:action_result.summary.total_events",
                                        "value": "0"
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "decision_1",
                        "id": "8",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "8",
                    "type": "decision",
                    "warnings": {},
                    "x": 240,
                    "y": 1640
                }
            },
            "notes": ""
        },
        "input_spec": [
            {
                "contains": [],
                "description": "threat indicator from Threat Activity Detected alerts",
                "name": "threat_match_value"
            }
        ],
        "output_spec": [
            {
                "contains": [],
                "datapaths": [
                    "task_note_incident_summary:custom_function:datamodel_note_content"
                ],
                "deduplicate": false,
                "description": "",
                "metadata": {},
                "name": "task_note_datamodel_summary"
            },
            {
                "contains": [],
                "datapaths": [
                    "task_note_incident_summary_no_events:custom_function:datamodel_note_content"
                ],
                "deduplicate": false,
                "description": "",
                "metadata": {},
                "name": "task_note_datamodel_summary_nodata"
            }
        ],
        "playbook_trigger": "artifact_created",
        "playbook_type": "data",
        "python_version": "3",
        "schema": "5.0.10",
        "version": "6.1.0.131"
    },
    "create_time": "2024-08-04T04:09:02.442511+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}